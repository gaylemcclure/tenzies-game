{"ast":null,"code":"var _jsxFileName = \"/Users/gaylemcclure/Dev/tenzies/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.css';\nimport Heading from \"./Components/Heading\";\nimport { nanoid } from 'nanoid';\nimport Die from './Components/Die';\nimport RollButton from \"./Components/Button\";\nimport Confetti from 'react-confetti';\nimport Counter from './Components/Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [diceNumbers, setDiceNumbers] = useState(randomNumber());\n  const [tenzies, setTenzies] = useState(false);\n  const [count, setCount] = useState(0);\n  React.useEffect(() => {\n    const allHeld = diceNumbers.every(diceNumber => diceNumber.isHeld);\n    const firstValue = diceNumbers[0].value;\n    const sameDice = diceNumbers.every(diceNumber => diceNumber.value === firstValue);\n\n    if (sameDice && allHeld) {\n      setTenzies(true);\n      console.log(\"You won!\");\n    }\n  }, [diceNumbers]);\n\n  function randomNumber() {\n    let dieNumbers = [];\n\n    for (let i = 0; i < 10; i++) {\n      dieNumbers.push({\n        value: Math.floor(Math.random() * 6 + 1),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n\n    return dieNumbers;\n  }\n\n  const makeDice = diceNumbers.map(diceNumber => /*#__PURE__*/_jsxDEV(Die, {\n    id: diceNumber.id,\n    value: diceNumber.value,\n    isHeld: diceNumber.isHeld,\n    holdDice: () => holdDice(diceNumber.id)\n  }, diceNumber.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this));\n\n  function holdDice(id) {\n    setDiceNumbers(prevHeld => prevHeld.map(diceNumber => {\n      return diceNumber.id === id ? { ...diceNumber,\n        isHeld: !diceNumber.isHeld\n      } : diceNumber;\n    }));\n  }\n\n  function rollDice() {\n    if (tenzies === false) {\n      setDiceNumbers(prevHeld => prevHeld.map(diceNumber => {\n        return diceNumber.isHeld === false ? { ...diceNumber,\n          value: Math.floor(Math.random() * 6 + 1)\n        } : diceNumber;\n      }));\n    } else {\n      setDiceNumbers(randomNumber);\n      setTenzies(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: makeDice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RollButton, {\n      roll: tenzies ? \"New Game\" : \"Roll\",\n      click: rollDice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Nzo1Moh8FKuABN4QFZVxZeoQvS4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gaylemcclure/Dev/tenzies/src/App.js"],"names":["React","useState","Heading","nanoid","Die","RollButton","Confetti","Counter","App","diceNumbers","setDiceNumbers","randomNumber","tenzies","setTenzies","count","setCount","useEffect","allHeld","every","diceNumber","isHeld","firstValue","value","sameDice","console","log","dieNumbers","i","push","Math","floor","random","id","makeDice","map","holdDice","prevHeld","rollDice"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './styles.css'\nimport Heading from \"./Components/Heading\"\nimport { nanoid } from 'nanoid';\nimport Die from './Components/Die';\nimport RollButton from \"./Components/Button\"\nimport Confetti from 'react-confetti';\nimport Counter from './Components/Counter';\n\nfunction App() {\n\n  const [diceNumbers, setDiceNumbers] = useState(randomNumber())\n  const [tenzies, setTenzies] = useState(false)\n  const [count, setCount] = useState(0)\n\n  React.useEffect(() => {\n    const allHeld = diceNumbers.every(diceNumber => diceNumber.isHeld)\n    const firstValue = diceNumbers[0].value\n    const sameDice = diceNumbers.every(diceNumber => diceNumber.value === firstValue)\n    if (sameDice && allHeld) {\n      setTenzies(true)\n      console.log(\"You won!\")\n    }\n  }, [diceNumbers])\n\n  function randomNumber() {\n    let dieNumbers = []\n    for (let i = 0; i < 10; i++) {\n      dieNumbers.push({\n        value: Math.floor(Math.random() *6 + 1),\n        isHeld: false,\n        id: nanoid()\n      })\n    \n    }\n    return dieNumbers\n  }\n\n  const makeDice = diceNumbers.map(diceNumber => (\n    <Die \n      key={diceNumber.id}\n      id={diceNumber.id} \n      value={diceNumber.value}\n      isHeld={diceNumber.isHeld}\n      holdDice={() => holdDice(diceNumber.id)}\n    />))\n\n  function holdDice(id) {\n    setDiceNumbers(prevHeld => prevHeld.map(diceNumber => {\n      return diceNumber.id === id ? \n        {...diceNumber, isHeld: !diceNumber.isHeld} : diceNumber\n    }))\n  }\n\n  function rollDice() {\n    if (tenzies === false) {\n    setDiceNumbers(prevHeld => prevHeld.map(diceNumber => {\n      return diceNumber.isHeld === false ?\n        {...diceNumber, value: Math.floor(Math.random() *6 + 1)} : diceNumber\n    }))}\n    else {\n      setDiceNumbers(randomNumber)\n      setTenzies(false)\n    }\n  }\n\n  return (\n    <main>\n      {tenzies && <Confetti />}\n      <Heading />\n      <Counter />\n      <div className=\"dice-container\">{makeDice}</div>\n      <RollButton roll={tenzies ? \"New Game\" : \"Roll\"} click={rollDice} />\n    </main>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}